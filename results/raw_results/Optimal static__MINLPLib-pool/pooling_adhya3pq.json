{"Itbt": 0, "Pace": 0.0950695, "Depth": 17, "Degree": 2, "RPSTime": 0.0916359, "FBBTTime": 0, "OBBTTime": 0, "TotalTime": 1.25459, "Iterations": 177, "LinearTime": 0.457312, "LowerBound": -561.587, "TimeVector": [0.0495852, 0.166405, 0.369108, 0.419683, 0.456463, 0.459321, 0.462523, 0.497249, 0.500425, 0.503437, 0.506307, 0.509684, 0.512814, 0.515931, 0.518968, 0.590806, 0.593862, 0.596858, 0.599961, 0.603072, 0.606148, 0.609238, 0.61233, 0.615155, 0.617876, 0.620858, 0.623646, 0.626479, 0.629354, 0.632445, 0.635459, 0.680946, 0.68394, 0.68696, 0.689797, 0.692836, 0.695907, 0.698942, 0.702127, 0.705315, 0.708474, 0.711621, 0.714569, 0.717509, 0.720649, 0.723933, 0.727313, 0.730696, 0.734141, 0.737352, 0.740787, 0.743983, 0.747013, 0.750122, 0.75328, 0.756376, 0.759578, 0.762598, 0.765657, 0.768756, 0.771718, 0.774768, 0.777984, 0.812949, 0.816007, 0.819097, 0.822132, 0.825179, 0.828149, 0.831424, 0.834459, 0.837504, 0.840146, 0.843098, 0.846065, 0.84911, 0.852252, 0.855434, 0.858184, 0.861519, 0.864556, 0.867715, 0.870715, 0.873697, 0.876701, 0.879957, 0.883107, 0.886322, 0.889362, 0.892465, 0.895747, 0.898825, 0.902129, 0.905209, 0.908474, 0.911562, 0.914948, 0.918093, 0.921093, 0.924015, 0.927016, 0.930021, 0.933013, 0.936346, 0.939465, 0.942625, 0.945924, 0.949254, 0.952567, 0.955765, 0.959084, 0.962192, 0.96527, 0.968312, 0.971327, 0.974298, 0.977461, 0.980594, 0.983644, 0.986723, 0.989785, 0.992684, 0.995814, 0.998712, 1.002, 1.00499, 1.00775, 1.07263, 1.07599, 1.07908, 1.08219, 1.08533, 1.08846, 1.09156, 1.09467, 1.0971, 1.10046, 1.10284, 1.10602, 1.10844, 1.11205, 1.11447, 1.11694, 1.12013, 1.12289, 1.12559, 1.12846, 1.13172, 1.13474, 1.13787, 1.14091, 1.14388, 1.14669, 1.14953, 1.15261, 1.15568, 1.15888, 1.16175, 1.16515, 1.16838, 1.1715, 1.17436, 1.17777, 1.18073, 1.18384, 1.18699, 1.19017, 1.19316, 1.19644, 1.19964, 1.20279, 1.20604, 1.20917, 1.21261, 1.21554, 1.21868, 2.47327], "UpperBound": -561.045, "rootBTTime": 0, "LowerBounds": {"1": -574.783, "5": -573.408, "6": -572.118, "7": -571.866, "9": -571.409, "10": -570.633, "11": -569.936, "12": -569.791, "13": -568.647, "16": -567.967, "18": -567.964, "21": -567.733, "24": -567.695, "26": -567.62, "27": -567.619, "30": -566.762, "31": -566.734, "32": -566.709, "33": -566.34, "36": -566.309, "37": -566.267, "38": -566.191, "42": -566, "43": -565.996, "44": -565.948, "45": -565.693, "48": -565.55, "52": -565.542, "53": -565.407, "57": -565.401, "58": -565.126, "61": -565.121, "62": -565.061, "63": -564.974, "64": -564.917, "65": -564.91, "69": -564.908, "70": -564.879, "71": -564.818, "72": -564.771, "73": -564.769, "74": -564.739, "77": -564.713, "78": -564.661, "79": -564.659, "80": -564.601, "81": -564.52, "84": -564.227, "85": -564.213, "86": -564.118, "87": -563.865, "92": -563.753, "94": -563.57, "95": -563.548, "99": -563.382, "103": -563.154, "104": -563.122, "105": -563.011, "112": -562.928, "113": -562.891, "114": -562.83, "120": -562.729, "123": -562.722, "124": -562.685, "125": -562.656, "126": -562.588, "127": -562.538, "128": -562.462, "129": -562.441, "130": -562.3, "136": -562.283, "144": -562.277, "145": -562.198, "148": -562.125, "149": -562.109, "150": -562.076, "151": -562.05, "152": -562.032, "153": -561.989, "154": -561.939, "155": -561.933, "157": -561.927, "158": -561.908, "159": -561.855, "160": -561.855, "161": -561.848, "162": -561.843, "163": -561.808, "164": -561.766, "165": -561.736, "167": -561.726, "168": -561.726, "174": -561.707, "175": -561.654, "176": -561.653, "177": -561.587}, "SolveResult": 0, "UpperBounds": {"1": -559.615, "2": -561.045}, "MaxQueueSize": 35, "VisitedNodes": 355, "BranchingVars": [0, 2, 1, 3, 4, 4, 3, 4, 2, 4, 2, 4, 5, 6, 0, 3, 2, 7, 7, 5, 5, 6, 3, 1, 3, 3, 5, 6, 0, 4, 0, 0, 1, 3, 3, 2, 0, 7, 5, 7, 6, 4, 2, 5, 7, 5, 6, 5, 7, 6, 6, 6, 5, 7, 6, 6, 1, 7, 7, 5, 2, 4, 4, 0, 5, 7, 6, 5, 6, 5, 0, 4, 0, 7, 7, 5, 5, 0, 0, 6, 4, 6, 3, 4, 4, 5, 5, 6, 7, 5, 7, 4, 6, 0, 7, 5, 7, 6, 7, 5, 4, 4, 3, 3, 7, 5, 5, 7, 6, 5, 6, 3, 4, 3, 4, 3, 0, 0, 0, 5, 6, 0, 0, 4, 5, 2, 0, 1, 5, 5, 6, 7, 5, 5, 7, 5, 7, 6, 6, 7, 5, 5, 7, 5, 3, 3, 1, 7, 2, 3, 4, 4, 4, 4, 4, 2, 4, 1, 3, 3, 3, 1, 5, 4, 6, 5, 4, 6, 6, 5, 4, 5, 3, 5, 3, 0, 4], "NonLinearTime": 0.705601, "OptimalityGap": 0.542372, "BranchingRules": ["eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative"], "LBImprovements": [0, 0, 0, 1.37496, 3.47173, 4.42281, 0, 0.456597, 1.61797, 2.6661, 1.28874, 2.17141, 0, 0, 0.683502, 0, 1.23266, 0, 0, 2.42214, 0, 0, 0.970753, 0, 3.482, 2.85119, 0, 0, 1.67171, 0.571325, 1.33301, 1.5884, 0, 3.61116, 3.65492, 0.616572, 2.04042, 0, 0, 0, 2.07238, 1.34166, 0.588579, 12.1234, 0, 0, 1.09128, 0, 0, 0, 0.671599, 7.25353, 0, 0, 0, 0.694259, 0.340628, 0, 0, 5.2083, 2.65912, 2.98463, 2.3177, 2.63447, 0, 0, 0, 0.00190784, 0.246717, 1.75726, 0.297367, 2.92361, 2.83509, 0, 0, 5.42118, 135.059, 0.908135, 1.82817, 2.8941, 0, 0, 1.13826, 3.31332, 1.49066, 168.057, 0, 0, 0, 0, 1.58806, 0, 44.5432, 0.679086, 0, 0, 0, 3.00608, 0, 0, 2.06429, 2.06429, 1.04482, 5.47748, 0, 0, 0, 0, 0, 0, 1.20274, 1.9414, 2.98487, 0, 0, 0, 1.79788, 1.8044, 1.58872, 0, 0, 1.77336, 0.795337, 1.29468, 14.461, 1.23075, 0.340233, 0.430194, 1.86946, 0, 0, 0, 0, 0, 1.67207, 0, 0, 0, 0, 0, 0.93913, 0, 1.04123, 0.15111, 0, 0, 0.839285, 0.616677, 1.58559, 1.13332, 1.64334, 2.15298, 0.0816094, 0.096436, 0, 1.08724, 1.79454, 1.3027, 5.0272, 5.0272, 1.12419, 1.37237, 111.848, 1.98546, 0, 1.6608, 0.000000000000113687, 0, 0, 0, 0, 0, 0.434904, 3.82464, 2.01779, 0.880792, 1.63667], "InfeasibleNodes": 0, "ElapsedTimeCoeffs": 0, "LinearizationTime": 0.000488369, "NumberOfVariables": 52, "CallsToLinearSolver": 355, "LinearGenerationTime": 0.116742, "SDPCutsGenerationTime": 0, "CallsToNonLinearSolver": 11, "StrongBranchingExtraTime": 0, "ElapsedTimeWeightedCoeffs": 0, "NodesDiscardedByFathoming": 0, "NodesDiscardedByTolerance": 178, "BoundFactorConstraintsTime": 0.0196541, "ElapsedTimeVarsInConstraints": 0, "meanBTRelativeChangeRootNode": 0, "NumberOfBoundFactorConstraints": 128, "NumberOfLAPACKConvergenceFailures": 0, "NumberOfRLTVariablesAfterLinearization": 32}