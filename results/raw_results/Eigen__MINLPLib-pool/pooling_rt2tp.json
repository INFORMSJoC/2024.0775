{"Itbt": 0, "Pace": 0.000629317, "Depth": 19, "Degree": 2, "RPSTime": 0.0623473, "FBBTTime": 0, "OBBTTime": 0, "TotalTime": 0.712448, "Iterations": 182, "LinearTime": 0.338265, "LowerBound": -4396.16, "TimeVector": [0.0475293, 0.0829403, 0.127643, 0.151898, 0.182752, 0.184827, 0.186791, 0.219239, 0.221536, 0.223812, 0.226038, 0.228273, 0.230385, 0.232605, 0.234765, 0.26002, 0.262253, 0.264487, 0.266809, 0.269029, 0.271262, 0.273572, 0.275733, 0.277822, 0.279926, 0.281999, 0.284137, 0.286369, 0.288586, 0.290589, 0.292808, 0.317394, 0.31949, 0.321592, 0.323567, 0.325841, 0.32791, 0.330049, 0.332177, 0.334281, 0.336474, 0.338758, 0.340918, 0.34306, 0.345144, 0.347323, 0.349402, 0.351631, 0.353726, 0.355857, 0.358192, 0.360318, 0.362464, 0.364718, 0.366853, 0.369193, 0.371476, 0.373718, 0.375906, 0.378092, 0.380141, 0.382464, 0.38459, 0.414656, 0.416884, 0.419056, 0.421329, 0.423675, 0.426003, 0.428069, 0.430359, 0.432508, 0.434659, 0.436951, 0.439102, 0.441291, 0.443551, 0.445772, 0.44796, 0.450193, 0.452514, 0.454647, 0.456889, 0.459077, 0.461062, 0.463223, 0.46539, 0.46753, 0.469645, 0.471836, 0.474035, 0.47635, 0.478565, 0.480783, 0.482751, 0.484859, 0.486936, 0.489011, 0.491201, 0.493337, 0.495556, 0.497736, 0.499867, 0.501962, 0.504308, 0.506578, 0.508741, 0.510933, 0.513068, 0.515239, 0.517348, 0.519383, 0.521465, 0.52364, 0.525765, 0.52808, 0.530365, 0.532457, 0.534693, 0.5369, 0.539077, 0.54116, 0.543373, 0.545484, 0.54757, 0.549712, 0.55193, 0.574188, 0.57641, 0.578687, 0.580813, 0.583074, 0.585263, 0.587373, 0.589674, 0.591884, 0.594024, 0.596169, 0.598421, 0.600578, 0.60274, 0.604849, 0.606871, 0.608972, 0.611038, 0.613261, 0.615473, 0.61769, 0.619858, 0.622191, 0.624495, 0.626664, 0.628781, 0.630842, 0.632892, 0.635177, 0.637405, 0.639496, 0.641615, 0.643825, 0.645889, 0.647971, 0.650196, 0.652251, 0.654397, 0.65658, 0.658872, 0.661007, 0.66329, 0.665558, 0.667853, 0.670079, 0.672493, 0.674703, 0.676839, 0.679101, 0.681324, 0.683533, 0.685619, 0.687873, 0.69012, 1.40257], "UpperBound": -4391.83, "rootBTTime": 0, "LowerBounds": {"1": -5528.25, "3": -5217.23, "4": -5148.83, "5": -5116.09, "6": -4998.42, "7": -4946.08, "8": -4939.47, "9": -4860.86, "10": -4838.91, "11": -4741.2, "12": -4736.55, "13": -4735.12, "14": -4733.79, "15": -4716.07, "18": -4669.27, "19": -4657.48, "20": -4622.66, "21": -4614.55, "23": -4611.63, "26": -4577.83, "27": -4564.21, "28": -4544.99, "29": -4541.71, "30": -4537.81, "31": -4532.34, "32": -4531.98, "33": -4531.19, "37": -4525.92, "38": -4523.08, "39": -4512.24, "40": -4510.63, "41": -4508.56, "42": -4508.05, "43": -4507.77, "44": -4501.84, "45": -4499.83, "46": -4499.68, "47": -4497.9, "48": -4491.56, "49": -4489.65, "50": -4489.09, "51": -4484.26, "52": -4480.37, "53": -4470.09, "54": -4468.58, "55": -4468.58, "57": -4465.2, "58": -4461.12, "59": -4459.57, "60": -4459.12, "61": -4456.49, "62": -4455.31, "63": -4455.14, "64": -4449.71, "65": -4448.73, "66": -4448.73, "68": -4448.21, "69": -4446.84, "70": -4444.35, "71": -4442.42, "72": -4439.69, "73": -4438.16, "74": -4437.33, "75": -4435.7, "76": -4433.81, "77": -4432.92, "78": -4432.39, "79": -4431.79, "80": -4431.7, "81": -4431.44, "82": -4430.14, "83": -4429.73, "84": -4429.01, "85": -4428.1, "87": -4424.44, "88": -4424.42, "89": -4424.06, "90": -4423.49, "93": -4422.24, "94": -4421.12, "95": -4420, "96": -4417.64, "99": -4415.93, "100": -4415.51, "101": -4415.26, "102": -4415.13, "103": -4413.93, "104": -4412.27, "106": -4412.11, "107": -4411.5, "108": -4411.09, "109": -4408.92, "110": -4408.87, "111": -4408.55, "113": -4408.55, "114": -4408.48, "116": -4408.48, "117": -4408.3, "118": -4408.27, "119": -4408.25, "120": -4408.12, "121": -4408.11, "122": -4407.93, "123": -4407.6, "124": -4407.6, "125": -4406.92, "126": -4406.49, "127": -4406.25, "128": -4406.11, "129": -4405.65, "130": -4405.63, "132": -4405.63, "133": -4405.54, "134": -4405.32, "135": -4405.11, "136": -4404.31, "137": -4404.2, "140": -4403.61, "141": -4403.33, "142": -4402.8, "143": -4402.7, "144": -4402.65, "145": -4401.98, "146": -4401.93, "147": -4401.9, "148": -4401.47, "150": -4401.47, "151": -4401.41, "152": -4400.64, "153": -4400.52, "154": -4400.5, "157": -4400.37, "158": -4400.28, "159": -4400.27, "160": -4400.13, "161": -4399.8, "164": -4399, "165": -4398.9, "166": -4398.84, "167": -4398.59, "168": -4398.39, "171": -4398.31, "172": -4397.95, "173": -4397.88, "174": -4397.8, "175": -4397.27, "176": -4396.99, "177": -4396.94, "178": -4396.92, "179": -4396.89, "180": -4396.67, "181": -4396.49, "182": -4396.16}, "SolveResult": 0, "UpperBounds": {"1": -3273.95, "2": -4391.83}, "MaxQueueSize": 32, "VisitedNodes": 365, "BranchingVars": [0, 1, 2, 2, 3, 4, 1, 0, 4, 3, 4, 2, 1, 5, 3, 1, 1, 0, 1, 0, 0, 0, 3, 2, 2, 1, 0, 0, 1, 1, 0, 0, 3, 2, 2, 0, 0, 0, 1, 2, 3, 2, 2, 1, 2, 2, 0, 2, 0, 2, 2, 2, 1, 0, 2, 0, 0, 2, 2, 0, 2, 2, 0, 2, 3, 0, 0, 1, 0, 0, 2, 2, 0, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 0, 0, 2, 0, 0, 2, 3, 0, 0, 1, 0, 0, 3, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 0, 2, 3, 0, 0, 3, 0, 0, 1, 0, 0, 0, 2, 2, 0, 0, 1, 2, 2, 2, 0, 3, 1, 1, 2, 0, 2, 1, 3, 2, 0, 1, 2, 0, 1, 1, 0, 1, 1, 3, 2, 2, 0, 2, 2, 3, 2, 2, 0, 2, 2, 2, 3, 0, 0, 0, 1, 2, 0, 3, 1, 1, 2, 2, 2, 2, 2, 0, 0, 1, 1, 0, 2, 0], "NonLinearTime": 0.311799, "OptimalityGap": 4.33172, "BranchingRules": ["eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative"], "LBImprovements": [0, 311.021, 356.368, 209.356, 117.67, 264.629, 692.685, 204.356, 352.305, 97.7133, 378.458, 67.2859, 123.49, 76.3085, 0, 93.4077, 101.523, 167.433, 727.243, 80.9498, 106.501, 130.287, 0, 79.2832, 79.6418, 750.483, 121.788, 217.191, 42.0305, 6.61573, 21.7166, 19.7413, 0, 8.11732, 0, 42.1067, 18.149, 23.2507, 14.3469, 115.063, 39.9836, 59.8369, 42.5743, 69.4426, 64.1286, 69.9558, 64.0837, 76.3017, 19.5593, 57.6494, 63.1403, 31.6366, 10.5171, 0.000000000000909495, 0, 18.8675, 41.7044, 5.81222, 21.4084, 54.0076, 24.7818, 8.475, 10.7842, 149.481, 0.000000000000909495, 59.6331, 58.2081, 58.2914, 53.6434, 20.294, 50.4636, 33.4451, 29.6059, 52.3388, 19.7714, 0.893152, 17.793, 44.2642, 57.0085, 29.7994, 40.5779, 21.6518, 18.6323, 6.76429, 0, 21.1769, 12.9409, 55.0489, 19.8614, 0, 31.987, 31.2503, 21.879, 36.1534, 33.1868, 0, 9.70843, 15.7063, 21.2187, 7.91359, 37.3224, 13.6616, 10.3212, 0, 32.5119, 3.23754, 16.0946, 19.0055, 2.80536, 38.8714, 0, 19.1801, 19.1038, 0, 0.215335, 0.187604, 0.0502424, 0.159415, 0.12584, 7.99344, 5.30964, 15.5094, 14.4027, 3.28924, 1.37724, 17.462, 32.7085, 3.46781, 2.31927, 0, 81.4518, 15.1673, 5.74188, 4.67938, 130.486, 5.47177, 0, 15.2963, 15.4597, 7.11871, 19.9064, 0.816809, 6.97761, 2.1454, 5.66304, 11.0728, 10.8801, 0, 11.3952, 10.05, 8.30744, 4.71085, 3.60316, 0, 4.342, 7.49169, 22.1622, 5.75809, 2.46779, 50.9632, 0, 7.62023, 7.61289, 2.11396, 0.309589, 11.3738, 0.203465, 0, 1.12275, 1.45387, 4.56741, 5.51547, 31.0221, 1.83224, 2.93969, 7.47065, 2.37503, 1.10732, 0.757421, 2.79722, 15.7476, 1.48032], "InfeasibleNodes": 12, "ElapsedTimeCoeffs": 0, "LinearizationTime": 0.000172415, "NumberOfVariables": 34, "CallsToLinearSolver": 365, "LinearGenerationTime": 0.0824317, "SDPCutsGenerationTime": 0, "CallsToNonLinearSolver": 11, "StrongBranchingExtraTime": 0, "ElapsedTimeWeightedCoeffs": 0, "NodesDiscardedByFathoming": 0, "NodesDiscardedByTolerance": 171, "BoundFactorConstraintsTime": 0.0118814, "ElapsedTimeVarsInConstraints": 0, "meanBTRelativeChangeRootNode": 0, "NumberOfBoundFactorConstraints": 72, "NumberOfLAPACKConvergenceFailures": 0, "NumberOfRLTVariablesAfterLinearization": 18}