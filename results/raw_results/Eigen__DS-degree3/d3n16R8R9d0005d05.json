{"Itbt": 0, "Pace": 0.0141612, "Depth": 18, "Degree": 3, "RPSTime": 0.0547495, "FBBTTime": 0, "OBBTTime": 0, "TotalTime": 0.427328, "Iterations": 138, "LinearTime": 0.271939, "LowerBound": 35.3846, "TimeVector": [0.0201556, 0.0316206, 0.0422624, 0.0529396, 0.0638772, 0.0660027, 0.0684042, 0.0793179, 0.0815581, 0.0838737, 0.0860191, 0.088192, 0.0904745, 0.0926578, 0.0948373, 0.105244, 0.107543, 0.109962, 0.112224, 0.114578, 0.11668, 0.119071, 0.121216, 0.123684, 0.126061, 0.128281, 0.130881, 0.133329, 0.135533, 0.13791, 0.140093, 0.151064, 0.15338, 0.155797, 0.157957, 0.160468, 0.162739, 0.164996, 0.167206, 0.169464, 0.171631, 0.173913, 0.176107, 0.178487, 0.180685, 0.18286, 0.185182, 0.187508, 0.18981, 0.192206, 0.194465, 0.196926, 0.199163, 0.201475, 0.203903, 0.2062, 0.208647, 0.210955, 0.213357, 0.215768, 0.21792, 0.220228, 0.222506, 0.233778, 0.236203, 0.238581, 0.240986, 0.243278, 0.245597, 0.24795, 0.250331, 0.252711, 0.255007, 0.257336, 0.25969, 0.262085, 0.264461, 0.266919, 0.269331, 0.271738, 0.274191, 0.276499, 0.278723, 0.281205, 0.283734, 0.286227, 0.288598, 0.290961, 0.293277, 0.295693, 0.298125, 0.300497, 0.302824, 0.305028, 0.307496, 0.309859, 0.312165, 0.314665, 0.317075, 0.31943, 0.321858, 0.324129, 0.326523, 0.328863, 0.331234, 0.333594, 0.336082, 0.338379, 0.340662, 0.343049, 0.345498, 0.347751, 0.35014, 0.352621, 0.355016, 0.357282, 0.359648, 0.36208, 0.364486, 0.366778, 0.369218, 0.371585, 0.373911, 0.376326, 0.378673, 0.380943, 0.383394, 0.394568, 0.39692, 0.399159, 0.401748, 0.404121, 0.406676, 0.409012, 0.411463, 0.413747, 0.4161, 0.843427], "UpperBound": 35.4199, "rootBTTime": 0, "LowerBounds": {"1": 5.20959, "2": 11.1197, "3": 12.0496, "4": 22.9096, "5": 25.2156, "6": 26.9898, "7": 28.2649, "8": 28.9753, "9": 30.1478, "10": 30.8201, "11": 31.756, "12": 32.5354, "13": 32.8612, "14": 33.0346, "15": 33.0808, "16": 33.5887, "17": 33.7102, "18": 33.7827, "19": 33.8674, "20": 33.9585, "21": 33.999, "22": 34.0328, "23": 34.233, "24": 34.2546, "25": 34.3966, "26": 34.4044, "27": 34.4285, "28": 34.537, "29": 34.5645, "30": 34.5828, "31": 34.6214, "32": 34.6268, "33": 34.6372, "34": 34.6512, "35": 34.6934, "36": 34.753, "37": 34.7574, "38": 34.7747, "39": 34.7759, "40": 34.794, "41": 34.8236, "42": 34.8877, "43": 34.9066, "44": 34.9098, "45": 34.9113, "46": 34.9491, "47": 34.9549, "48": 34.9636, "49": 34.9649, "50": 35.0065, "51": 35.0203, "52": 35.0239, "53": 35.0452, "54": 35.0585, "55": 35.0731, "56": 35.076, "57": 35.0996, "58": 35.1052, "59": 35.1336, "60": 35.1582, "61": 35.1622, "62": 35.1624, "63": 35.1663, "64": 35.1676, "65": 35.1794, "66": 35.1829, "67": 35.1839, "68": 35.1972, "69": 35.2015, "70": 35.2286, "71": 35.2482, "72": 35.2486, "73": 35.2496, "74": 35.2552, "75": 35.2613, "76": 35.2623, "77": 35.2644, "78": 35.2652, "79": 35.2741, "80": 35.2754, "81": 35.2804, "82": 35.2836, "83": 35.2861, "84": 35.2881, "85": 35.2886, "86": 35.2918, "87": 35.2924, "88": 35.2942, "89": 35.2992, "90": 35.3098, "91": 35.3108, "92": 35.3145, "93": 35.3191, "94": 35.3217, "95": 35.3228, "96": 35.3298, "97": 35.3304, "98": 35.3309, "99": 35.3314, "100": 35.3371, "101": 35.3396, "102": 35.3404, "103": 35.3405, "104": 35.3434, "105": 35.345, "106": 35.3451, "107": 35.3482, "108": 35.35, "109": 35.3512, "110": 35.3537, "111": 35.3541, "112": 35.3595, "113": 35.36, "114": 35.3604, "115": 35.3607, "116": 35.3609, "117": 35.361, "118": 35.3616, "119": 35.3616, "120": 35.3641, "121": 35.3652, "122": 35.3656, "123": 35.3676, "124": 35.3695, "125": 35.3701, "126": 35.372, "127": 35.3729, "128": 35.3764, "129": 35.3769, "130": 35.3777, "131": 35.3784, "132": 35.3784, "133": 35.3794, "134": 35.3797, "135": 35.3806, "136": 35.3816, "137": 35.3821, "138": 35.3846}, "SolveResult": 0, "UpperBounds": {"1": 35.4199}, "MaxQueueSize": 23, "VisitedNodes": 277, "BranchingVars": [9, 1, 1, 0, 0, 1, 1, 0, 1, 1, 3, 0, 0, 0, 0, 8, 0, 0, 0, 0, 2, 0, 9, 0, 1, 1, 1, 0, 7, 8, 1, 0, 0, 3, 1, 1, 1, 8, 1, 1, 1, 2, 1, 0, 8, 7, 0, 1, 3, 1, 1, 1, 8, 9, 1, 1, 7, 5, 0, 0, 0, 0, 9, 0, 1, 1, 1, 0, 1, 7, 0, 0, 1, 1, 0, 3, 1, 0, 1, 1, 7, 1, 8, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 7, 0, 0, 1, 0, 9, 1, 3, 1, 0, 7, 7, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 7, 7, 7, 1, 0, 7, 0, 1, 7, 7, 2, 0, 3, 9, 1, 0, 1, 1], "NonLinearTime": 0.100603, "OptimalityGap": 0.0352331, "BranchingRules": ["eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative"], "LBImprovements": [5.91015, 14.0958, 10.86, 4.0802, 4.93228, 4.76618, 4.59629, 7.45041, 2.38755, 3.13843, 1.27855, 1.17478, 1.17161, 0.554143, 4.62539, 0.410279, 0.686426, 0.471975, 1.08169, 1.30595, 0.234028, 0.588579, 0.460398, 0.173892, 1.53762, 0.792826, 0.671087, 0.350623, 0.0727205, 0.170169, 0.0053772, 0.279853, 0.13743, 1.1653, 0.100568, 1.04682, 1.32587, 0.270533, 0.510207, 0.115836, 0.131351, 0.291721, 0.00468144, 0.0966748, 0.351, 0.109317, 0.118185, 0.112396, 0.479314, 0.307954, 0.0848802, 0.138552, 0.117045, 0.485281, 0.0605355, 0.462361, 0.575887, 0.24606, 0.0949205, 0.0247051, 0.08739, 0.0927889, 0.463555, 0.0338734, 0.598802, 0.189119, 0.137786, 0.210719, 0.141904, 0.0196273, 0.027189, 0.0255708, 0.098547, 0.0390098, 0.0577792, 0.0295304, 0.365589, 0.0151213, 0.0250989, 0.0543752, 0.00776079, 0.287646, 0.395905, 0.12825, 0.123313, 0.069776, 0.0896676, 0.0461646, 0.0378507, 0.110652, 0.121228, 0.0306771, 0.0213953, 0.0704815, 0.00756358, 0.0719651, 0.0196153, 0.0765869, 0.0136463, 0.0477617, 0.0279688, 0.0206018, 0.0441562, 0.0261229, 0.00865067, 0.0143756, 0.0122427, 0.086996, 0.0128621, 0.0227408, 0.00586856, 0.0014266, 0.08244, 0.0125225, 0.0318265, 0.076259, 0.0167152, 0.0625804, 0.0319728, 0.0409138, 0.0206194, 0.0232405, 0.00257701, 0.0258341, 0.0248746, 0.0175265, 0.00671989, 0.0746697, 0.00371649, 0.0154157, 0.0257088, 0.0234859, 0.00920336, 0.0191464, 0.0314005, 0.019891, 0.036438, 0.0218439], "InfeasibleNodes": 5, "ElapsedTimeCoeffs": 0, "LinearizationTime": 0.000103217, "NumberOfVariables": 16, "CallsToLinearSolver": 277, "LinearGenerationTime": 0.0464119, "SDPCutsGenerationTime": 0, "CallsToNonLinearSolver": 11, "StrongBranchingExtraTime": 0, "ElapsedTimeWeightedCoeffs": 0, "NodesDiscardedByFathoming": 0, "NodesDiscardedByTolerance": 134, "BoundFactorConstraintsTime": 0.0109877, "ElapsedTimeVarsInConstraints": 0, "meanBTRelativeChangeRootNode": 0, "NumberOfBoundFactorConstraints": 38, "NumberOfLAPACKConvergenceFailures": 0, "NumberOfRLTVariablesAfterLinearization": 19}