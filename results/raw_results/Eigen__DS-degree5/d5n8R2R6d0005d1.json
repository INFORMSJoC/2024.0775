{"Itbt": 0, "Pace": 0.018095, "Depth": 24, "Degree": 5, "RPSTime": 0.299598, "FBBTTime": 0, "OBBTTime": 0, "TotalTime": 2.19618, "Iterations": 264, "LinearTime": 1.78901, "LowerBound": -60.9163, "TimeVector": [0.0249365, 0.0433749, 0.0594041, 0.0747971, 0.0899523, 0.0976417, 0.105752, 0.121939, 0.129634, 0.137891, 0.14658, 0.155323, 0.164009, 0.172883, 0.17871, 0.197109, 0.204892, 0.212641, 0.219855, 0.227757, 0.236553, 0.24499, 0.253581, 0.262106, 0.268535, 0.27633, 0.283959, 0.292963, 0.300752, 0.307896, 0.31495, 0.330765, 0.338731, 0.345317, 0.354566, 0.362443, 0.367716, 0.373884, 0.380262, 0.388479, 0.395372, 0.40427, 0.412376, 0.419329, 0.427011, 0.43469, 0.442862, 0.449646, 0.45711, 0.464546, 0.471475, 0.479202, 0.485605, 0.492356, 0.500251, 0.504844, 0.512865, 0.518032, 0.524668, 0.532924, 0.540906, 0.549453, 0.555781, 0.572593, 0.58077, 0.587944, 0.59575, 0.603684, 0.612967, 0.620507, 0.627703, 0.635569, 0.642189, 0.650302, 0.658656, 0.664622, 0.67377, 0.681003, 0.688261, 0.695323, 0.704019, 0.711598, 0.718704, 0.725935, 0.734237, 0.741227, 0.748097, 0.756512, 0.76585, 0.774667, 0.782755, 0.790463, 0.799391, 0.805942, 0.814008, 0.821892, 0.830038, 0.837719, 0.845584, 0.85428, 0.862427, 0.870717, 0.878452, 0.886726, 0.894416, 0.902254, 0.91011, 0.918559, 0.924121, 0.931231, 0.939082, 0.946848, 0.954123, 0.96271, 0.970114, 0.977571, 0.98455, 0.99124, 0.997935, 1.00582, 1.0138, 1.02115, 1.02861, 1.03604, 1.04351, 1.05007, 1.0583, 1.07691, 1.08553, 1.09368, 1.10208, 1.11011, 1.11805, 1.12419, 1.13324, 1.14065, 1.14972, 1.15725, 1.16572, 1.1726, 1.18202, 1.18948, 1.19726, 1.2057, 1.21291, 1.21958, 1.22648, 1.23478, 1.24354, 1.25107, 1.25696, 1.2664, 1.27485, 1.28313, 1.29042, 1.29841, 1.30731, 1.31515, 1.32424, 1.33281, 1.34054, 1.34649, 1.35558, 1.36394, 1.371, 1.37837, 1.38677, 1.39533, 1.40344, 1.41038, 1.41823, 1.4255, 1.4329, 1.44187, 1.4504, 1.45747, 1.46578, 1.47377, 1.4823, 1.48955, 1.49669, 1.50446, 1.51247, 1.52005, 1.52784, 1.53614, 1.54375, 1.55193, 1.56008, 1.56852, 1.57493, 1.58247, 1.59079, 1.59794, 1.60663, 1.61564, 1.62337, 1.63181, 1.63923, 1.6471, 1.65513, 1.6639, 1.67108, 1.67998, 1.68872, 1.69673, 1.70422, 1.71193, 1.72027, 1.72856, 1.73678, 1.74392, 1.75163, 1.7599, 1.76821, 1.77579, 1.78487, 1.7926, 1.79776, 1.80589, 1.8132, 1.82066, 1.82911, 1.83769, 1.84581, 1.85392, 1.86313, 1.871, 1.87948, 1.88613, 1.89316, 1.90235, 1.91098, 1.91835, 1.92746, 1.93499, 1.94329, 1.95181, 1.96122, 1.96901, 1.97765, 1.98591, 1.99435, 2.00257, 2.01124, 2.01905, 2.02785, 2.03712, 2.04649, 2.05409, 2.06208, 2.0713, 2.08057, 2.08885, 2.09659, 2.11534, 2.12458, 2.13413, 2.14366, 2.15273, 2.16151, 2.1703, 2.17832, 4.37449], "UpperBound": -60.8582, "rootBTTime": 0, "LowerBounds": {"1": -182.285, "2": -163.359, "3": -156.609, "4": -155.585, "5": -148.884, "6": -148.532, "7": -135.157, "8": -134.193, "9": -130.557, "10": -129.866, "11": -128.717, "12": -126.948, "13": -123.487, "14": -123.202, "15": -123.131, "16": -119.51, "17": -117.721, "18": -116.69, "19": -115.234, "20": -112.564, "21": -112.32, "22": -111.487, "23": -110.716, "24": -110.403, "25": -110.096, "26": -110.067, "27": -108.247, "28": -106.306, "29": -106.072, "30": -106.023, "31": -105.752, "32": -105.493, "33": -105.266, "34": -105.179, "35": -105.087, "36": -103.962, "37": -103.923, "38": -103.898, "39": -102.257, "40": -101.7, "41": -100.27, "42": -100.08, "43": -99.8727, "44": -99.2889, "45": -99.1353, "46": -98.2594, "47": -97.3745, "48": -97.0857, "49": -96.3372, "50": -96.2544, "51": -95.4424, "52": -94.7158, "53": -92.9541, "54": -92.8994, "55": -92.5835, "56": -91.9586, "57": -91.7104, "58": -91.2903, "59": -90.9627, "60": -90.8587, "61": -90.8415, "62": -90.1753, "63": -89.9453, "64": -89.8325, "65": -89.4625, "66": -89.3241, "67": -89.2661, "68": -88.8199, "69": -88.6413, "70": -88.627, "71": -87.464, "72": -87.1714, "73": -86.4446, "74": -86.2171, "75": -84.5678, "76": -84.242, "77": -84.1064, "78": -83.2263, "79": -82.5335, "80": -82.229, "81": -81.8848, "82": -81.772, "83": -81.6274, "84": -81.3785, "85": -81.1285, "86": -81.0808, "87": -81.0234, "88": -80.8647, "89": -80.538, "90": -80.2835, "91": -80.2762, "92": -80.1832, "93": -79.9812, "94": -79.7992, "95": -79.6651, "96": -79.5785, "97": -79.5084, "98": -79.3902, "99": -79.0418, "100": -78.7326, "101": -78.1233, "102": -77.6665, "103": -77.1381, "104": -76.8094, "105": -76.5431, "106": -76.422, "107": -76.0181, "108": -75.1179, "109": -74.7839, "110": -74.7051, "111": -74.5707, "112": -74.4592, "113": -74.4203, "114": -74.2787, "115": -74.1987, "116": -73.9203, "117": -73.8262, "118": -73.6843, "119": -73.6839, "120": -73.5352, "121": -73.1047, "122": -72.827, "123": -72.1877, "124": -71.4335, "125": -70.6697, "126": -70.5627, "127": -70.5409, "128": -70.2896, "129": -70.2657, "130": -70.0357, "131": -69.9751, "132": -69.88, "133": -69.5247, "134": -69.3442, "135": -69.1774, "136": -69.1173, "137": -69.1027, "138": -68.8906, "139": -68.6158, "140": -68.0808, "141": -67.9998, "142": -67.928, "143": -67.7796, "144": -67.5996, "145": -67.5866, "146": -67.4667, "147": -67.2026, "148": -67.1838, "149": -67.1133, "150": -66.9278, "151": -66.8834, "152": -66.6919, "153": -66.59, "154": -66.5444, "155": -66.4288, "156": -66.3937, "157": -66.2969, "158": -66.1752, "159": -66.0297, "160": -66.0076, "161": -65.9133, "162": -65.8515, "163": -65.6298, "164": -65.3036, "165": -65.2178, "166": -65.1294, "167": -64.9852, "168": -64.9119, "169": -64.8847, "170": -64.8595, "171": -64.8365, "172": -64.7532, "173": -64.7108, "174": -64.4997, "175": -64.4097, "176": -64.3866, "177": -64.2285, "178": -64.195, "179": -64.0652, "180": -64.0262, "181": -64.0191, "182": -63.9915, "183": -63.9557, "184": -63.8534, "185": -63.8456, "186": -63.7658, "187": -63.5892, "188": -63.4371, "189": -63.3998, "190": -63.3386, "191": -63.33, "192": -63.3161, "193": -63.1713, "194": -63.1683, "195": -63.1181, "196": -63.0944, "197": -62.9798, "198": -62.9722, "199": -62.9223, "200": -62.823, "201": -62.7627, "202": -62.7546, "203": -62.6516, "204": -62.573, "205": -62.4422, "206": -62.4106, "207": -62.3558, "208": -62.3468, "209": -62.3041, "210": -62.2912, "211": -62.2743, "212": -62.2164, "213": -62.197, "214": -62.1808, "215": -62.147, "216": -62.131, "217": -62.129, "218": -62.1207, "219": -61.9986, "220": -61.951, "221": -61.9158, "222": -61.9074, "223": -61.8902, "224": -61.8901, "225": -61.8876, "226": -61.7057, "227": -61.6892, "228": -61.6824, "229": -61.6347, "230": -61.63, "231": -61.6087, "232": -61.5968, "233": -61.5641, "234": -61.5312, "235": -61.4388, "236": -61.425, "237": -61.3684, "238": -61.357, "239": -61.3332, "240": -61.3293, "241": -61.3033, "242": -61.3029, "243": -61.2851, "244": -61.2785, "245": -61.2636, "246": -61.2585, "247": -61.2498, "248": -61.192, "249": -61.1674, "250": -61.1196, "251": -61.1019, "252": -61.0806, "253": -61.0586, "254": -61.0361, "255": -61.0192, "256": -60.9986, "257": -60.9968, "258": -60.9934, "259": -60.9832, "260": -60.9668, "261": -60.931, "262": -60.9253, "263": -60.9198, "264": -60.9163}, "SolveResult": 0, "UpperBounds": {"1": -60.8582}, "MaxQueueSize": 46, "VisitedNodes": 529, "BranchingVars": [0, 6, 3, 7, 7, 7, 6, 7, 5, 5, 1, 1, 5, 1, 4, 6, 6, 3, 4, 4, 6, 5, 1, 5, 4, 4, 4, 1, 5, 3, 4, 4, 6, 4, 1, 4, 4, 4, 4, 5, 4, 6, 4, 4, 0, 4, 6, 4, 0, 4, 4, 6, 4, 4, 4, 4, 5, 4, 4, 6, 6, 5, 4, 1, 5, 4, 5, 4, 6, 4, 4, 7, 4, 4, 6, 4, 5, 4, 4, 7, 4, 4, 4, 4, 5, 4, 4, 6, 4, 6, 7, 4, 6, 4, 5, 7, 5, 0, 6, 5, 5, 5, 7, 4, 6, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 7, 5, 4, 3, 1, 6, 4, 4, 6, 4, 6, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 1, 5, 4, 4, 1, 5, 5, 5, 4, 4, 5, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 6, 4, 4, 5, 4, 1, 4, 4, 4, 7, 0, 0, 4, 4, 5, 4, 5, 4, 4, 5, 4, 6, 5, 5, 5, 6, 7, 0, 6, 4, 5, 5, 4, 4, 4, 0, 0, 0, 4, 7, 7, 4, 7, 5, 7, 4, 0, 4, 4, 5, 4, 0, 4, 5, 7, 5, 4, 4, 6, 6, 4, 0, 4, 7, 0, 6, 7, 7, 7, 5, 7, 7, 7, 4, 6, 6, 0, 7, 5, 6, 4, 4, 6, 5, 7, 7, 4, 7, 4, 7, 7], "NonLinearTime": 0.107503, "OptimalityGap": 0.0580685, "BranchingRules": ["eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative"], "LBImprovements": [18.9254, 14.8275, 1.02427, 25.0281, 19.0182, 13.3752, 18.4663, 24.1256, 7.35458, 12.1449, 17.2306, 3.46065, 13.3909, 0.0705801, 10.811, 6.94621, 15.4641, 1.45585, 16.0991, 12.691, 19.3663, 7.58844, 0.312904, 14.1488, 4.02437, 18.3566, 19.6201, 1.1267, 13.1722, 0.757396, 24.1243, 9.15552, 1.30393, 5.09861, 3.38644, 16.7906, 0, 19.3304, 0, 4.61441, 26.4435, 9.11768, 9.69744, 1.91438, 0.875905, 16.0304, 16.246, 6.24424, 6.50474, 7.61308, 0.726666, 14.4395, 27.1026, 29.9771, 13.005, 0, 2.3863, 0, 10.0981, 4.41407, 11.0422, 2.7113, 27.9466, 0.36996, 5.22054, 36.9589, 6.73267, 14.2492, 21.1746, 13.5091, 26.9106, 3.06499, 6.9362, 9.40768, 17.6844, 0, 2.22167, 1.84777, 15.9435, 4.10574, 14.2851, 2.38183, 18.8045, 1.71341, 3.99037, 0.797376, 1.04221, 7.75995, 10.2723, 14.2538, 2.60973, 3.64009, 5.56089, 15.7731, 5.20591, 8.90882, 4.80332, 0.348334, 7.60838, 8.75749, 2.10518, 3.38778, 7.61343, 8.19358, 9.42979, 12.4663, 9.62441, 4.57699, 0, 6.70528, 10.5792, 0.923928, 4.13077, 17.9122, 7.65426, 21.7259, 21.5007, 40.8162, 4.33973, 2.97254, 16.0333, 5.24033, 37.539, 2.54286, 7.33112, 2.48196, 4.62755, 3.86076, 4.63587, 0.858281, 6.64505, 7.53321, 0, 0, 1.39784, 2.94212, 4.26619, 1.96284, 5.63601, 2.863, 10.2219, 8.80011, 0.595725, 24.7612, 3.56753, 27.3452, 14.293, 0.491961, 8.14871, 1.94259, 0, 1.56243, 8.69969, 1.65966, 10.4082, 6.74724, 3.17883, 1.31573, 8.03093, 2.6915, 18.1545, 0, 1.77639, 3.87866, 2.46312, 1.96116, 0.598582, 3.98667, 5.16817, 3.32829, 2.70749, 3.39623, 0.645597, 0.733913, 3.57572, 2.17021, 0.639219, 1.78443, 2.43055, 19.2256, 1.44614, 7.43706, 2.87512, 1.72245, 1.64861, 0.365989, 1.70163, 14.043, 0.30547, 2.08879, 12.1089, 0, 0.408516, 1.83511, 7.16642, 1.20427, 0.624016, 4.44167, 0, 7.87781, 1.16596, 1.12467, 14.487, 0.268912, 1.00332, 1.37451, 4.18111, 2.06932, 0.935681, 1.3714, 0.591853, 5.16645, 0, 1.74838, 2.32156, 1.32612, 1.99959, 1.12392, 0, 1.09488, 3.68773, 29.8112, 2.39991, 0.200926, 1.1721, 2.33976, 1.19443, 1.07423, 1.55863, 0, 1.33185, 0.293848, 0.285561, 5.11146, 0.930298, 0, 0.176351, 1.17957, 0.805729, 0.747738, 0.135922, 0.388097, 0.183188, 0.279949, 0.36815, 0.367923, 17.9298, 0.198652, 0.184155, 1.05113, 0.785456, 1.75151, 15.3427, 0.934217, 23.0223, 0.124405, 0.0299267, 0.077067, 0.0861232, 0.259037, 0.0250129, 2.51259, 0.147102, 0.025691], "InfeasibleNodes": 83, "ElapsedTimeCoeffs": 0, "LinearizationTime": 0.000689586, "NumberOfVariables": 8, "CallsToLinearSolver": 529, "LinearGenerationTime": 0.273368, "SDPCutsGenerationTime": 0, "CallsToNonLinearSolver": 12, "StrongBranchingExtraTime": 0, "ElapsedTimeWeightedCoeffs": 0, "NodesDiscardedByFathoming": 0, "NodesDiscardedByTolerance": 182, "BoundFactorConstraintsTime": 0.142205, "ElapsedTimeVarsInConstraints": 0, "meanBTRelativeChangeRootNode": 0, "NumberOfBoundFactorConstraints": 92, "NumberOfLAPACKConvergenceFailures": 0, "NumberOfRLTVariablesAfterLinearization": 59}