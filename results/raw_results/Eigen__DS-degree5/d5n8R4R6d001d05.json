{"Itbt": 0, "Pace": 0.0277574, "Depth": 13, "Degree": 5, "RPSTime": 0.488863, "FBBTTime": 0, "OBBTTime": 0, "TotalTime": 4.17208, "Iterations": 142, "LinearTime": 3.58158, "LowerBound": 283.385, "TimeVector": [0.0586936, 0.0936475, 0.129756, 0.166845, 0.203783, 0.232526, 0.258535, 0.292381, 0.321784, 0.351757, 0.382474, 0.408225, 0.439127, 0.46635, 0.495364, 0.529841, 0.559985, 0.588516, 0.614244, 0.645395, 0.677926, 0.706053, 0.731508, 0.758377, 0.788292, 0.815903, 0.842575, 0.869743, 0.898426, 0.926468, 0.954761, 0.993684, 1.02509, 1.04995, 1.08228, 1.11127, 1.13884, 1.16723, 1.19142, 1.22111, 1.24657, 1.27498, 1.3051, 1.33815, 1.36532, 1.39273, 1.42132, 1.447, 1.47261, 1.49916, 1.52485, 1.55299, 1.57991, 1.60843, 1.63885, 1.66666, 1.69128, 1.71859, 1.74673, 1.77446, 1.80192, 1.83254, 1.86065, 1.89972, 1.92558, 1.95444, 1.98478, 2.01509, 2.04363, 2.07192, 2.09987, 2.12904, 2.15781, 2.18498, 2.21229, 2.23665, 2.26447, 2.29109, 2.32043, 2.35001, 2.37775, 2.40387, 2.43302, 2.46009, 2.48783, 2.51683, 2.54475, 2.57526, 2.60496, 2.63004, 2.65772, 2.68406, 2.71327, 2.7495, 2.77797, 2.80743, 2.83713, 2.86837, 2.89865, 2.92353, 2.95271, 2.97893, 3.00621, 3.03159, 3.05946, 3.08476, 3.11611, 3.14197, 3.17225, 3.20525, 3.23309, 3.25845, 3.28351, 3.31665, 3.34936, 3.37835, 3.40458, 3.43007, 3.46289, 3.49086, 3.51702, 3.54832, 3.57875, 3.6085, 3.63938, 3.66979, 3.70131, 3.73994, 3.7707, 3.79958, 3.83022, 3.85885, 3.8905, 3.92054, 3.95258, 3.98401, 4.01235, 4.0459, 4.07799, 4.10562, 4.13672, 8.3088], "UpperBound": 283.659, "rootBTTime": 0, "LowerBounds": {"1": 133.08, "2": 156.636, "3": 180.68, "4": 185.707, "5": 193.782, "6": 197.283, "7": 212.729, "8": 216.01, "9": 218.669, "10": 219.885, "11": 224.114, "12": 226.692, "13": 231.488, "14": 239.014, "15": 243.61, "16": 244.307, "17": 245.268, "18": 250.198, "19": 251.774, "20": 252.343, "21": 252.692, "22": 253.699, "23": 255.07, "24": 255.533, "25": 255.56, "26": 257.227, "27": 258.054, "28": 259.296, "29": 259.864, "30": 262.045, "31": 263.195, "32": 263.835, "33": 263.857, "34": 263.884, "35": 263.952, "36": 264.063, "37": 264.682, "38": 265.313, "39": 265.412, "40": 267.122, "41": 268.148, "42": 268.148, "43": 268.377, "44": 268.633, "45": 268.855, "46": 269.389, "47": 270.019, "48": 270.149, "49": 270.239, "50": 270.397, "51": 270.397, "52": 270.397, "53": 270.397, "54": 271.384, "55": 271.512, "56": 272.67, "57": 273.383, "58": 274.03, "59": 274.063, "60": 274.808, "61": 274.811, "62": 274.812, "63": 275.232, "64": 275.232, "65": 276.221, "66": 276.337, "67": 276.512, "68": 276.764, "69": 276.767, "70": 276.984, "71": 277.064, "72": 277.067, "73": 277.173, "74": 277.952, "75": 278.367, "76": 278.367, "77": 278.717, "78": 279.426, "79": 279.676, "80": 279.88, "81": 279.88, "82": 280.085, "83": 280.175, "84": 280.283, "85": 280.378, "86": 280.513, "87": 280.771, "88": 280.916, "89": 280.923, "90": 280.932, "91": 280.942, "92": 281.119, "93": 281.185, "94": 281.304, "95": 281.396, "96": 281.473, "97": 281.517, "98": 281.641, "99": 282, "100": 282.044, "101": 282.091, "102": 282.144, "103": 282.194, "104": 282.219, "105": 282.32, "106": 282.32, "107": 282.325, "108": 282.389, "109": 282.42, "110": 282.479, "111": 282.564, "112": 282.603, "113": 282.615, "114": 282.616, "115": 282.627, "116": 282.665, "117": 282.729, "118": 282.805, "119": 282.805, "120": 282.839, "121": 282.912, "122": 282.932, "123": 282.965, "124": 282.972, "125": 282.978, "126": 282.98, "127": 282.981, "128": 282.996, "129": 283.019, "130": 283.063, "131": 283.105, "132": 283.151, "133": 283.177, "134": 283.183, "135": 283.183, "136": 283.183, "137": 283.206, "138": 283.214, "139": 283.248, "140": 283.259, "141": 283.373, "142": 283.385}, "SolveResult": 0, "UpperBounds": {"1": 283.659}, "MaxQueueSize": 35, "VisitedNodes": 285, "BranchingVars": [2, 0, 3, 5, 3, 7, 4, 4, 3, 5, 6, 4, 1, 1, 5, 4, 7, 7, 1, 7, 7, 1, 0, 5, 2, 2, 2, 6, 6, 5, 7, 7, 7, 7, 7, 1, 2, 1, 6, 2, 6, 6, 5, 2, 6, 7, 2, 7, 4, 4, 4, 4, 4, 2, 1, 6, 1, 6, 6, 6, 2, 2, 4, 4, 6, 2, 7, 3, 3, 4, 4, 4, 6, 6, 4, 4, 4, 6, 4, 2, 2, 6, 4, 6, 6, 7, 6, 2, 7, 3, 2, 4, 6, 6, 2, 6, 6, 7, 2, 2, 3, 2, 2, 4, 2, 2, 4, 4, 3, 7, 5, 0, 2, 7, 7, 7, 2, 4, 4, 2, 5, 7, 2, 2, 7, 7, 7, 2, 7, 4, 7, 2, 4, 7, 7, 7, 4, 5, 2, 5, 4, 2], "NonLinearTime": 0.101596, "OptimalityGap": 0.274007, "BranchingRules": ["eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative", "eigen_cen_alternative"], "LBImprovements": [23.5557, 24.0436, 16.603, 27.0217, 30.3318, 18.7277, 18.7589, 27.5999, 25.6384, 25.3829, 58.4896, 35.3531, 21.2039, 18.213, 8.1636, 27.2052, 23.5867, 28.5193, 12.9081, 29.8761, 17.3269, 13.4232, 15.1686, 8.52934, 3.73628, 8.18541, 5.14048, 4.56062, 3.97055, 14.7189, 16.8907, 16.3408, 19.3908, 17.235, 19.604, 10.7491, 3.46616, 11.0238, 3.97701, 9.86227, 2.2489, 2.2489, 14.0437, 4.03697, 31.1295, 12.0061, 6.4938, 10.7829, 23.2085, 13.6919, 13.7423, 16.1363, 19.308, 4.83674, 33.4481, 2.56244, 26.1091, 7.61084, 3.00065, 5.70444, 6.49329, 3.1399, 12.6379, 12.6307, 2.14562, 5.18001, 4.67286, 11.8852, 10.2906, 9.88583, 12.3098, 6.4714, 2.70629, 2.96439, 9.77101, 10.461, 24.7648, 3.63738, 24.5434, 2.73675, 2.74772, 2.23444, 8.42701, 2.28059, 2.42724, 6.35639, 2.20719, 1.22816, 6.8157, 1.11155, 1.05812, 7.8591, 1.77937, 2.76899, 0.695635, 2.7621, 4.75341, 6.84882, 0.388322, 0.685051, 0.102453, 0.520407, 0.285413, 24.5524, 0.612344, 0.86335, 24.117, 1.57263, 13.9519, 0.893728, 0.432285, 13.8326, 0.224517, 1.77869, 1.74389, 1.30079, 0.289931, 4.96077, 1.83454, 0.0728151, 0.462069, 0.281426, 0.785311, 0.82201, 0.894437, 0.898032, 7.61131, 0.155117, 0.775009, 1.87091, 3.32878, 0.0549744, 0.321576, 1.09028, 1.09208, 0.897582, 0.348016, 0.618137, 1.22636, 0.708016, 0.518733, 0.0627696], "InfeasibleNodes": 2, "ElapsedTimeCoeffs": 0, "LinearizationTime": 0.00277515, "NumberOfVariables": 8, "CallsToLinearSolver": 285, "LinearGenerationTime": 0.361351, "SDPCutsGenerationTime": 0, "CallsToNonLinearSolver": 11, "StrongBranchingExtraTime": 0, "ElapsedTimeWeightedCoeffs": 0, "NodesDiscardedByFathoming": 0, "NodesDiscardedByTolerance": 141, "BoundFactorConstraintsTime": 0.331443, "ElapsedTimeVarsInConstraints": 0, "meanBTRelativeChangeRootNode": 0, "NumberOfBoundFactorConstraints": 218, "NumberOfLAPACKConvergenceFailures": 0, "NumberOfRLTVariablesAfterLinearization": 125}